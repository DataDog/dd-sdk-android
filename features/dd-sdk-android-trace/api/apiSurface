class com.datadog.android.trace.AndroidTracer : com.datadog.opentracing.DDTracer
  override fun buildSpan(String): DDSpanBuilder
  class Builder
    constructor(com.datadog.android.api.SdkCore = Datadog.getInstance())
    fun build(): AndroidTracer
    fun setTracingHeaderTypes(Set<TracingHeaderType>): Builder
    fun setService(String): Builder
    fun setPartialFlushThreshold(Int): Builder
    DEPRECATED fun addGlobalTag(String, String): Builder
    fun addTag(String, String): Builder
    fun setBundleWithRumEnabled(Boolean): Builder
    fun setSampleRate(Double): Builder
  override fun toString(): String
  companion object 
    fun logThrowable(io.opentracing.Span, Throwable)
    fun logErrorMessage(io.opentracing.Span, String)
interface com.datadog.android.trace.InternalCoreWriterProvider
  fun getCoreTracerWriter(): com.datadog.trace.common.writer.Writer
fun io.opentracing.Span.setError(Throwable)
fun io.opentracing.Span.setError(String)
fun <T: Any?> withinSpan(String, io.opentracing.Span? = null, Boolean = true, io.opentracing.Span.() -> T): T
object com.datadog.android.trace.Trace
  fun enable(TraceConfiguration, com.datadog.android.api.SdkCore = Datadog.getInstance())
data class com.datadog.android.trace.TraceConfiguration
  class Builder
    fun useCustomEndpoint(String): Builder
    fun setEventMapper(com.datadog.android.trace.event.SpanEventMapper): Builder
    fun setNetworkInfoEnabled(Boolean): Builder
    fun build(): TraceConfiguration
interface com.datadog.android.trace.event.SpanEventMapper : com.datadog.android.event.EventMapper<com.datadog.android.trace.model.SpanEvent>
  override fun map(com.datadog.android.trace.model.SpanEvent): com.datadog.android.trace.model.SpanEvent
fun <T> android.database.sqlite.SQLiteDatabase.transactionTraced(String, Boolean = true, io.opentracing.Span.(android.database.sqlite.SQLiteDatabase) -> T): T
data class com.datadog.android.trace.model.SpanEvent
  constructor(kotlin.String, kotlin.String, kotlin.String, kotlin.String, kotlin.String, kotlin.String, kotlin.Long, kotlin.Long, kotlin.Long = 0L, Metrics, Meta)
  val type: kotlin.String
  fun toJson(): com.google.gson.JsonElement
  companion object 
    fun fromJson(kotlin.String): SpanEvent
    fun fromJsonObject(com.google.gson.JsonObject): SpanEvent
  data class Metrics
    constructor(kotlin.Long? = null, kotlin.collections.MutableMap<kotlin.String, kotlin.Number> = mutableMapOf())
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Metrics
      fun fromJsonObject(com.google.gson.JsonObject): Metrics
  data class Meta
    constructor(kotlin.String, Dd, Span, Tracer, Usr, Network? = null, Device, Os, kotlin.collections.MutableMap<kotlin.String, kotlin.String> = mutableMapOf())
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Meta
      fun fromJsonObject(com.google.gson.JsonObject): Meta
  data class Dd
    constructor(kotlin.String? = "android", Application? = null, Session? = null, View? = null)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Dd
      fun fromJsonObject(com.google.gson.JsonObject): Dd
  class Span
    val kind: kotlin.String
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Span
      fun fromJsonObject(com.google.gson.JsonObject): Span
  data class Tracer
    constructor(kotlin.String)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Tracer
      fun fromJsonObject(com.google.gson.JsonObject): Tracer
  data class Usr
    constructor(kotlin.String? = null, kotlin.String? = null, kotlin.String? = null, kotlin.collections.MutableMap<kotlin.String, kotlin.Any?> = mutableMapOf())
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Usr
      fun fromJsonObject(com.google.gson.JsonObject): Usr
  data class Network
    constructor(Client? = null)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Network
      fun fromJsonObject(com.google.gson.JsonObject): Network
  data class Device
    constructor(Type, kotlin.String? = null, kotlin.String? = null, kotlin.String? = null, kotlin.String? = null)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Device
      fun fromJsonObject(com.google.gson.JsonObject): Device
  data class Os
    constructor(kotlin.String, kotlin.String, kotlin.String? = null, kotlin.String)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Os
      fun fromJsonObject(com.google.gson.JsonObject): Os
  data class Application
    constructor(kotlin.String? = null)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Application
      fun fromJsonObject(com.google.gson.JsonObject): Application
  data class Session
    constructor(kotlin.String? = null)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Session
      fun fromJsonObject(com.google.gson.JsonObject): Session
  data class View
    constructor(kotlin.String? = null)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): View
      fun fromJsonObject(com.google.gson.JsonObject): View
  data class Client
    constructor(SimCarrier? = null, kotlin.String? = null, kotlin.String? = null, kotlin.String? = null, kotlin.String? = null)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Client
      fun fromJsonObject(com.google.gson.JsonObject): Client
  data class SimCarrier
    constructor(kotlin.String? = null, kotlin.String? = null)
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): SimCarrier
      fun fromJsonObject(com.google.gson.JsonObject): SimCarrier
  enum Type
    constructor(kotlin.String)
    - MOBILE
    - DESKTOP
    - TABLET
    - TV
    - GAMING_CONSOLE
    - BOT
    - OTHER
    fun toJson(): com.google.gson.JsonElement
    companion object 
      fun fromJson(kotlin.String): Type
