{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "rum/vital-schema.json",
  "title": "RumVitalEvent",
  "type": "object",
  "description": "Schema of all properties of a Vital event",
  "allOf": [
    {
      "$ref": "_common-schema.json"
    },
    {
      "$ref": "_view-container-schema.json"
    },
    {
      "required": ["type", "vital"],
      "properties": {
        "type": {
          "type": "string",
          "description": "RUM event type",
          "const": "vital",
          "readOnly": true
        },
        "vital": {
          "type": "object",
          "description": "Vital properties",
          "required": ["id", "type"],
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the vital",
              "enum": ["duration", "step"],
              "readOnly": true
            },
            "id": {
              "type": "string",
              "description": "UUID of the vital",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
              "readOnly": true
            },
            "parent_id": {
              "type": "string",
              "description": "UUID for linking the step vital to the parent event, if applicable",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "Name of the vital, as it is also used as facet path for its value, it must contain only letters, digits, or the characters - _ . @ $",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "Description of the vital. It can be used as a secondary identifier (URL, React component name...)",
              "readOnly": true
            },
            "duration": {
              "type": "number",
              "description": "Duration of the vital in nanoseconds",
              "readOnly": true
            },
            "custom": {
              "type": "object",
              "description": "User custom vital.",
              "additionalProperties": {
                "type": "number",
                "minimum": 0,
                "readOnly": true
              },
              "readOnly": true
            },
            "step_type": {
              "type": "string",
              "description": "Type of the step that triggered the vital, if applicable",
              "enum": ["start", "update", "retry", "end"],
              "readOnly": true
            },
            "failure_reason": {
              "type": "string",
              "description": "Reason for the failure of the step, if applicable",
              "enum": ["error", "abandoned", "other"],
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "_dd": {
          "type": "object",
          "description": "Internal properties",
          "properties": {
            "vital": {
              "type": "object",
              "description": "Internal vital properties",
              "properties": {
                "computed_value": {
                  "type": "boolean",
                  "description": "Whether the value of the vital is computed by the SDK (as opposed to directly provided by the customer)",
                  "readOnly": true
                }
              },
              "readOnly": true
            }
          },
          "readOnly": true
        }
      }
    }
  ]
}
