public final class com/datadog/android/trace/opentelemetry/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public static final field OPENTELEMETRY_API_VERSION_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class com/datadog/android/trace/opentelemetry/OtelTracerProvider : io/opentelemetry/api/trace/TracerProvider {
	public static final field Companion Lcom/datadog/android/trace/opentelemetry/OtelTracerProvider$Companion;
	public fun <init> (Lcom/datadog/android/api/feature/FeatureSdkCore;Lcom/datadog/trace/bootstrap/instrumentation/api/AgentTracer$TracerAPI;Lcom/datadog/android/api/InternalLogger;Z)V
	public fun get (Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
	public fun get (Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
	public fun toString ()Ljava/lang/String;
	public fun tracerBuilder (Ljava/lang/String;)Lio/opentelemetry/api/trace/TracerBuilder;
}

public final class com/datadog/android/trace/opentelemetry/OtelTracerProvider$Builder {
	public fun <init> ()V
	public fun <init> (Lcom/datadog/android/api/SdkCore;)V
	public synthetic fun <init> (Lcom/datadog/android/api/SdkCore;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addTag (Ljava/lang/String;Ljava/lang/String;)Lcom/datadog/android/trace/opentelemetry/OtelTracerProvider$Builder;
	public final fun build ()Lio/opentelemetry/api/trace/TracerProvider;
	public final fun setBundleWithRumEnabled (Z)Lcom/datadog/android/trace/opentelemetry/OtelTracerProvider$Builder;
	public final fun setPartialFlushThreshold (I)Lcom/datadog/android/trace/opentelemetry/OtelTracerProvider$Builder;
	public final fun setSampleRate (D)Lcom/datadog/android/trace/opentelemetry/OtelTracerProvider$Builder;
	public final fun setService (Ljava/lang/String;)Lcom/datadog/android/trace/opentelemetry/OtelTracerProvider$Builder;
	public final fun setTracingHeaderTypes (Ljava/util/Set;)Lcom/datadog/android/trace/opentelemetry/OtelTracerProvider$Builder;
}

public final class com/datadog/android/trace/opentelemetry/OtelTracerProvider$Companion {
}

public final class com/datadog/opentelemetry/context/propagation/TraceStateHelper {
	public static fun decodeHeader (Ljava/lang/String;)Lio/opentelemetry/api/trace/TraceState;
	public static fun encodeHeader (Lio/opentelemetry/api/trace/TraceState;)Ljava/lang/String;
}

public final class com/datadog/opentelemetry/trace/OtelConventions {
	public static fun applyNamingConvention (Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan;)V
	public static fun applyReservedAttribute (Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Z
	public static fun toOtelSpanKind (Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanKind;
	public static fun toSpanKindTagValue (Lio/opentelemetry/api/trace/SpanKind;)Ljava/lang/String;
}

public class com/datadog/opentelemetry/trace/OtelExtractedContext : com/datadog/trace/bootstrap/instrumentation/api/AgentSpan$Context {
	public fun baggageItems ()Ljava/lang/Iterable;
	public static fun extract (Lio/opentelemetry/context/Context;Lcom/datadog/android/api/InternalLogger;)Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan$Context;
	public fun getPathwayContext ()Lcom/datadog/trace/bootstrap/instrumentation/api/PathwayContext;
	public fun getSamplingPriority ()I
	public fun getSpanId ()J
	public fun getTrace ()Lcom/datadog/trace/bootstrap/instrumentation/api/AgentTrace;
	public fun getTraceId ()Lcom/datadog/trace/api/DDTraceId;
}

public class com/datadog/opentelemetry/trace/OtelSpan : io/opentelemetry/api/trace/Span {
	public fun <init> (Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan;Lcom/datadog/trace/bootstrap/instrumentation/api/AgentTracer$TracerAPI;)V
	public fun activate ()Lcom/datadog/trace/bootstrap/instrumentation/api/AgentScope;
	public fun addEvent (Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/Span;
	public fun addEvent (Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;JLjava/util/concurrent/TimeUnit;)Lio/opentelemetry/api/trace/Span;
	public fun end ()V
	public fun end (JLjava/util/concurrent/TimeUnit;)V
	public fun getAgentSpanContext ()Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan$Context;
	public fun getSpanContext ()Lio/opentelemetry/api/trace/SpanContext;
	public fun getStatusCode ()Lio/opentelemetry/api/trace/StatusCode;
	public static fun invalid ()Lio/opentelemetry/api/trace/Span;
	public fun isRecording ()Z
	public fun recordException (Ljava/lang/Throwable;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/Span;
	public fun setAttribute (Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/trace/Span;
	public fun setStatus (Lio/opentelemetry/api/trace/StatusCode;Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
	public fun updateName (Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
}

public class com/datadog/opentelemetry/trace/OtelSpanBuilder : io/opentelemetry/api/trace/SpanBuilder {
	public fun <init> (Lcom/datadog/trace/bootstrap/instrumentation/api/AgentTracer$SpanBuilder;Lcom/datadog/trace/bootstrap/instrumentation/api/AgentTracer$TracerAPI;Lcom/datadog/android/api/InternalLogger;)V
	public fun addLink (Lio/opentelemetry/api/trace/SpanContext;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun addLink (Lio/opentelemetry/api/trace/SpanContext;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Ljava/lang/String;D)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Ljava/lang/String;J)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Ljava/lang/String;Z)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setNoParent ()Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setParent (Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setSpanKind (Lio/opentelemetry/api/trace/SpanKind;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setStartTimestamp (JLjava/util/concurrent/TimeUnit;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun startSpan ()Lio/opentelemetry/api/trace/Span;
}

public class com/datadog/opentelemetry/trace/OtelSpanContext : io/opentelemetry/api/trace/SpanContext {
	public fun <init> (Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan$Context;ZZLio/opentelemetry/api/trace/TraceState;)V
	public static fun fromLocalSpan (Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan;)Lio/opentelemetry/api/trace/SpanContext;
	public static fun fromRemote (Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan$Context;Lio/opentelemetry/api/trace/TraceState;)Lio/opentelemetry/api/trace/SpanContext;
	public fun getDelegate ()Lcom/datadog/trace/bootstrap/instrumentation/api/AgentSpan$Context;
	public fun getSpanId ()Ljava/lang/String;
	public fun getTraceFlags ()Lio/opentelemetry/api/trace/TraceFlags;
	public fun getTraceId ()Ljava/lang/String;
	public fun getTraceState ()Lio/opentelemetry/api/trace/TraceState;
	public fun isRemote ()Z
	public fun toString ()Ljava/lang/String;
}

public class com/datadog/opentelemetry/trace/OtelSpanLink : com/datadog/trace/bootstrap/instrumentation/api/SpanLink {
	public fun <init> (Lio/opentelemetry/api/trace/SpanContext;)V
	public fun <init> (Lio/opentelemetry/api/trace/SpanContext;Lio/opentelemetry/api/common/Attributes;)V
}

public class com/datadog/opentelemetry/trace/OtelTracer : io/opentelemetry/api/trace/Tracer {
	public fun <init> (Ljava/lang/String;Lcom/datadog/trace/bootstrap/instrumentation/api/AgentTracer$TracerAPI;Lcom/datadog/android/api/InternalLogger;)V
	public fun <init> (Ljava/lang/String;Lcom/datadog/trace/bootstrap/instrumentation/api/AgentTracer$TracerAPI;Lcom/datadog/android/api/InternalLogger;Ljava/util/function/Function;)V
	public fun spanBuilder (Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanBuilder;
}

public class com/datadog/opentelemetry/trace/OtelTracerBuilder : io/opentelemetry/api/trace/TracerBuilder {
	public fun <init> (Ljava/lang/String;Lcom/datadog/trace/bootstrap/instrumentation/api/AgentTracer$TracerAPI;Lcom/datadog/android/api/InternalLogger;Ljava/util/function/Function;)V
	public fun build ()Lio/opentelemetry/api/trace/Tracer;
	public fun setInstrumentationVersion (Ljava/lang/String;)Lio/opentelemetry/api/trace/TracerBuilder;
	public fun setSchemaUrl (Ljava/lang/String;)Lio/opentelemetry/api/trace/TracerBuilder;
}

