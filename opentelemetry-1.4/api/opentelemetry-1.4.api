public class datadog/trace/instrumentation/opentelemetry14/context/OtelContext : io/opentelemetry/context/Context {
	public static final field ROOT Ldatadog/trace/instrumentation/opentelemetry14/context/OtelContext;
	public fun <init> (Lio/opentelemetry/api/trace/Span;Lio/opentelemetry/api/trace/Span;)V
	public fun get (Lio/opentelemetry/context/ContextKey;)Ljava/lang/Object;
	public fun makeCurrent ()Lio/opentelemetry/context/Scope;
	public fun toString ()Ljava/lang/String;
	public fun with (Lio/opentelemetry/context/ContextKey;Ljava/lang/Object;)Lio/opentelemetry/context/Context;
}

public class datadog/trace/instrumentation/opentelemetry14/context/OtelScope : io/opentelemetry/context/Scope {
	public fun <init> (Lio/opentelemetry/context/Scope;Ldatadog/trace/bootstrap/instrumentation/api/AgentScope;)V
	public fun close ()V
}

public class datadog/trace/instrumentation/opentelemetry14/context/propagation/AgentTextMapPropagator : io/opentelemetry/context/propagation/TextMapPropagator {
	public fun <init> ()V
	public fun extract (Lio/opentelemetry/context/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/TextMapGetter;)Lio/opentelemetry/context/Context;
	public fun fields ()Ljava/util/Collection;
	public fun inject (Lio/opentelemetry/context/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/TextMapSetter;)V
}

public class datadog/trace/instrumentation/opentelemetry14/context/propagation/OtelContextPropagators : io/opentelemetry/context/propagation/ContextPropagators {
	public static final field INSTANCE Lio/opentelemetry/context/propagation/ContextPropagators;
	public fun <init> ()V
	public fun getTextMapPropagator ()Lio/opentelemetry/context/propagation/TextMapPropagator;
}

public final class datadog/trace/instrumentation/opentelemetry14/trace/OtelConventions {
	public static fun applyNamingConvention (Ldatadog/trace/bootstrap/instrumentation/api/AgentSpan;)V
	public static fun applyReservedAttribute (Ldatadog/trace/bootstrap/instrumentation/api/AgentSpan;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Z
	public static fun toOtelSpanKind (Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanKind;
	public static fun toSpanKindTagValue (Lio/opentelemetry/api/trace/SpanKind;)Ljava/lang/String;
}

public class datadog/trace/instrumentation/opentelemetry14/trace/OtelExtractedContext : datadog/trace/bootstrap/instrumentation/api/AgentSpan$Context {
	public fun baggageItems ()Ljava/lang/Iterable;
	public static fun extract (Lio/opentelemetry/context/Context;)Ldatadog/trace/bootstrap/instrumentation/api/AgentSpan$Context;
	public fun getPathwayContext ()Ldatadog/trace/bootstrap/instrumentation/api/PathwayContext;
	public fun getSamplingPriority ()I
	public fun getSpanId ()J
	public fun getTrace ()Ldatadog/trace/bootstrap/instrumentation/api/AgentTrace;
	public fun getTraceId ()Ldatadog/trace/api/DDTraceId;
}

public class datadog/trace/instrumentation/opentelemetry14/trace/OtelSpan : io/opentelemetry/api/trace/Span {
	public fun <init> (Ldatadog/trace/bootstrap/instrumentation/api/AgentSpan;)V
	public fun activate ()Ldatadog/trace/bootstrap/instrumentation/api/AgentScope;
	public fun addEvent (Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/Span;
	public fun addEvent (Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;JLjava/util/concurrent/TimeUnit;)Lio/opentelemetry/api/trace/Span;
	public fun end ()V
	public fun end (JLjava/util/concurrent/TimeUnit;)V
	public fun getAgentSpanContext ()Ldatadog/trace/bootstrap/instrumentation/api/AgentSpan$Context;
	public fun getSpanContext ()Lio/opentelemetry/api/trace/SpanContext;
	public static fun invalid ()Lio/opentelemetry/api/trace/Span;
	public fun isRecording ()Z
	public fun recordException (Ljava/lang/Throwable;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/Span;
	public fun setAttribute (Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/trace/Span;
	public fun setStatus (Lio/opentelemetry/api/trace/StatusCode;Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
	public fun updateName (Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
}

public class datadog/trace/instrumentation/opentelemetry14/trace/OtelSpanBuilder : io/opentelemetry/api/trace/SpanBuilder {
	public fun <init> (Ldatadog/trace/bootstrap/instrumentation/api/AgentTracer$SpanBuilder;)V
	public fun addLink (Lio/opentelemetry/api/trace/SpanContext;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun addLink (Lio/opentelemetry/api/trace/SpanContext;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Ljava/lang/String;D)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Ljava/lang/String;J)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setAttribute (Ljava/lang/String;Z)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setNoParent ()Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setParent (Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setSpanKind (Lio/opentelemetry/api/trace/SpanKind;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun setStartTimestamp (JLjava/util/concurrent/TimeUnit;)Lio/opentelemetry/api/trace/SpanBuilder;
	public fun startSpan ()Lio/opentelemetry/api/trace/Span;
}

public class datadog/trace/instrumentation/opentelemetry14/trace/OtelSpanContext : io/opentelemetry/api/trace/SpanContext {
	public fun <init> (Ldatadog/trace/bootstrap/instrumentation/api/AgentSpan$Context;ZZ)V
	public static fun fromLocalSpan (Ldatadog/trace/bootstrap/instrumentation/api/AgentSpan;)Lio/opentelemetry/api/trace/SpanContext;
	public fun getSpanId ()Ljava/lang/String;
	public fun getTraceFlags ()Lio/opentelemetry/api/trace/TraceFlags;
	public fun getTraceId ()Ljava/lang/String;
	public fun getTraceState ()Lio/opentelemetry/api/trace/TraceState;
	public fun isRemote ()Z
	public fun toString ()Ljava/lang/String;
}

public class datadog/trace/instrumentation/opentelemetry14/trace/OtelSpanLink : datadog/trace/bootstrap/instrumentation/api/SpanLink {
	public fun <init> (Lio/opentelemetry/api/trace/SpanContext;)V
	public fun <init> (Lio/opentelemetry/api/trace/SpanContext;Lio/opentelemetry/api/common/Attributes;)V
}

public class datadog/trace/instrumentation/opentelemetry14/trace/OtelTracer : io/opentelemetry/api/trace/Tracer {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ldatadog/trace/bootstrap/instrumentation/api/AgentTracer$TracerAPI;)V
	public fun spanBuilder (Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanBuilder;
}

public class datadog/trace/instrumentation/opentelemetry14/trace/OtelTracerProvider : io/opentelemetry/api/trace/TracerProvider {
	public static final field INSTANCE Ldatadog/trace/instrumentation/opentelemetry14/trace/OtelTracerProvider;
	public fun <init> ()V
	public fun get (Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
	public fun get (Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
	public fun tracerBuilder (Ljava/lang/String;)Lio/opentelemetry/api/trace/TracerBuilder;
}

