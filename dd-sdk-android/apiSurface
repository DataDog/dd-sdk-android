object com.datadog.android.Datadog
  DEPRECATED const val DATADOG_US: String
  DEPRECATED const val DATADOG_EU: String
  fun initialize(android.content.Context, DatadogConfig)
  DEPRECATED fun initialize(android.content.Context, String, String? = null)
  DEPRECATED fun setEndpointUrl(String, com.datadog.android.log.EndpointUpdateStrategy)
  fun isInitialized(): Boolean
  fun setVerbosity(Int)
  fun setUserInfo(String? = null, String? = null, String? = null)
class com.datadog.android.DatadogConfig
  class Builder
    constructor(String, java.util.UUID)
    constructor(String)
    constructor(String, String)
    fun build(): DatadogConfig
    fun setLogsEnabled(Boolean): Builder
    fun setTracesEnabled(Boolean): Builder
    fun setCrashReportsEnabled(Boolean): Builder
    fun setRumEnabled(Boolean): Builder
    fun setServiceName(String): Builder
    fun setEnvironmentName(String): Builder
    fun useEUEndpoints(): Builder
    fun useUSEndpoints(): Builder
    fun useCustomLogsEndpoint(String): Builder
    fun useCustomTracesEndpoint(String): Builder
    fun useCustomCrashReportsEndpoint(String): Builder
    fun useCustomRumEndpoint(String): Builder
    fun trackGestures(): Builder
    fun useViewTrackingStrategy(com.datadog.android.rum.ViewTrackingStrategy): Builder
  companion object
object com.datadog.android.DatadogEndpoint
  const val LOGS_US: String
  const val LOGS_EU: String
  const val TRACES_US: String
  const val TRACES_EU: String
  const val RUM_US: String
  const val RUM_EU: String
DEPRECATED enum com.datadog.android.log.EndpointUpdateStrategy
  - DISCARD_OLD_DATA
  - SEND_OLD_DATA_TO_NEW_ENDPOINT
class com.datadog.android.log.Logger
  fun v(String, Throwable? = null, Map<String, Any?> = emptyMap())
  fun d(String, Throwable? = null, Map<String, Any?> = emptyMap())
  fun i(String, Throwable? = null, Map<String, Any?> = emptyMap())
  fun w(String, Throwable? = null, Map<String, Any?> = emptyMap())
  fun e(String, Throwable? = null, Map<String, Any?> = emptyMap())
  fun wtf(String, Throwable? = null, Map<String, Any?> = emptyMap())
  fun log(Int, String, Throwable? = null, Map<String, Any?> = emptyMap())
  class Builder
    fun build(): Logger
    fun setServiceName(String): Builder
    fun setDatadogLogsEnabled(Boolean): Builder
    fun setLogcatLogsEnabled(Boolean): Builder
    fun setNetworkInfoEnabled(Boolean): Builder
    fun setLoggerName(String): Builder
    fun setBundleWithTraceEnabled(Boolean): Builder
    fun setBundleWithRumEnabled(Boolean): Builder
  fun addAttribute(String, Boolean)
  fun addAttribute(String, Int)
  fun addAttribute(String, Long)
  fun addAttribute(String, Float)
  fun addAttribute(String, Double)
  fun addAttribute(String, String?)
  fun addAttribute(String, java.util.Date?)
  fun addAttribute(String, com.google.gson.JsonObject?)
  fun addAttribute(String, com.google.gson.JsonArray?)
  fun removeAttribute(String)
  fun addTag(String, String)
  fun addTag(String)
  fun removeTag(String)
  fun removeTagsWithKey(String)
abstract class com.datadog.android.rum.ActivityLifecycleTrackingStrategy : android.app.Application, ActivityLifecycleCallbacks, TrackingStrategy
  override fun register(android.content.Context)
  override fun unregister(android.content.Context)
  override fun onActivityPaused(android.app.Activity)
  override fun onActivityStarted(android.app.Activity)
  override fun onActivityDestroyed(android.app.Activity)
  override fun onActivitySaveInstanceState(android.app.Activity, android.os.Bundle)
  override fun onActivityStopped(android.app.Activity)
  override fun onActivityCreated(android.app.Activity, android.os.Bundle?)
  override fun onActivityResumed(android.app.Activity)
class com.datadog.android.rum.ActivityViewTrackingStrategy : ActivityLifecycleTrackingStrategy, ViewTrackingStrategy
  override fun onActivityResumed(android.app.Activity)
  override fun onActivityPaused(android.app.Activity)
object com.datadog.android.rum.GlobalRum
  fun isRegistered(): Boolean
  fun registerIfAbsent(RumMonitor): Boolean
  fun registerIfAbsent(java.util.concurrent.Callable<RumMonitor>): Boolean
  fun get(): RumMonitor
class com.datadog.android.rum.RumInterceptor : okhttp3.Interceptor
  override fun intercept(okhttp3.Interceptor, Chain): okhttp3.Response
  companion object
interface com.datadog.android.rum.RumMonitor
  fun startView(Any, String, Map<String, Any?> = emptyMap())
  fun stopView(Any, Map<String, Any?> = emptyMap())
  fun addUserAction(String, Map<String, Any?> = emptyMap())
  fun startResource(Any, String, Map<String, Any?> = emptyMap())
  fun stopResource(Any, RumResourceKind, Map<String, Any?> = emptyMap())
  fun stopResourceWithError(Any, String, String, Throwable)
  fun addError(String, String, Throwable, Map<String, Any?>)
  class Builder
    fun build(): RumMonitor
enum com.datadog.android.rum.RumResourceKind
  constructor(String)
  - BEACON
  - FETCH
  - XHR
  - DOCUMENT
  - UNKNOWN
  - IMAGE
  - JS
  - FONT
  - CSS
  - MEDIA
  - OTHER
  companion object
interface com.datadog.android.rum.TrackingStrategy
  fun register(android.content.Context)
  fun unregister(android.content.Context)
interface com.datadog.android.rum.UserActionTrackingStrategy : TrackingStrategy
interface com.datadog.android.rum.ViewTrackingStrategy : TrackingStrategy
class com.datadog.android.tracing.AndroidTracer : datadog.opentracing.DDTracer
  override fun buildSpan(String): DDSpanBuilder
  class Builder
    fun build(): AndroidTracer
    fun setServiceName(String): Builder
    fun setPartialFlushThreshold(Int): Builder
    fun setBundleWithRumEnabled(Boolean): Builder
  companion object
class com.datadog.android.tracing.TracingInterceptor : okhttp3.Interceptor
  override fun intercept(okhttp3.Interceptor, Chain): okhttp3.Response
