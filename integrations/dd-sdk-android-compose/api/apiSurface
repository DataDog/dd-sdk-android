class com.datadog.android.compose.ComposeActionTrackingStrategy : com.datadog.android.rum.tracking.ActionTrackingStrategy
  override fun findTargetForTap(android.view.View, Float, Float): com.datadog.android.rum.tracking.ViewTarget?
  override fun findTargetForScroll(android.view.View, Float, Float): com.datadog.android.rum.tracking.ViewTarget?
fun androidx.compose.ui.Modifier.datadog(String, Boolean = false): androidx.compose.ui.Modifier
annotation com.datadog.android.compose.ExperimentalTrackingApi
fun trackClick(String, Map<String, Any?> = remember { emptyMap() }, com.datadog.android.api.SdkCore = Datadog.getInstance(), () -> Unit): () -> Unit
fun TrackInteractionEffect(String, androidx.compose.foundation.interaction.InteractionSource, InteractionType, Map<String, Any?> = emptyMap(), com.datadog.android.api.SdkCore = Datadog.getInstance())
sealed class com.datadog.android.compose.InteractionType
  class Swipe<T: Any> : InteractionType
    constructor(androidx.compose.material.SwipeableState<T>, androidx.compose.foundation.gestures.Orientation, Boolean = false)
  class Scroll : InteractionType
    constructor(androidx.compose.foundation.gestures.ScrollableState, androidx.compose.foundation.gestures.Orientation, Boolean = false)
fun NavigationViewTrackingEffect(androidx.navigation.NavController, Boolean = true, com.datadog.android.rum.tracking.ComponentPredicate<androidx.navigation.NavDestination> = AcceptAllNavDestinations(), com.datadog.android.api.SdkCore = Datadog.getInstance())
annotation com.datadog.android.compose.RecordImages
fun com.datadog.android.rum.RumConfiguration.Builder.enableComposeActionTracking(): com.datadog.android.rum.RumConfiguration.Builder
annotation com.datadog.android.compose.TrackViews
