open class com.datadog.android.compose.AcceptAllNavKeyPredicate<T> : com.datadog.android.rum.tracking.ComponentPredicate<T>
  override fun accept(T): Boolean
  override fun getViewName(T): String?
  override fun equals(Any?): Boolean
  override fun hashCode(): Int
interface com.datadog.android.compose.AttributesResolver<T>
  fun resolveAttributes(T): Map<String, Any?>?
interface com.datadog.android.compose.BackstackKeyResolver<T>
  fun getStableKey(T): String
annotation com.datadog.android.compose.ComposeInstrumentation
fun androidx.compose.ui.Modifier.datadog(String, Boolean = false): androidx.compose.ui.Modifier
annotation com.datadog.android.compose.ExperimentalTrackingApi
class com.datadog.android.compose.HashcodeBackstackKeyResolver<T> : BackstackKeyResolver<T>
  override fun getStableKey(T): String
fun trackClick(String, Map<String, Any?> = remember { emptyMap() }, com.datadog.android.api.SdkCore = Datadog.getInstance(), () -> Unit): () -> Unit
fun TrackInteractionEffect(String, androidx.compose.foundation.interaction.InteractionSource, InteractionType, Map<String, Any?> = emptyMap(), com.datadog.android.api.SdkCore = Datadog.getInstance())
sealed class com.datadog.android.compose.InteractionType
  class Swipe<T: Any> : InteractionType
    constructor(androidx.compose.material.SwipeableState<T>, androidx.compose.foundation.gestures.Orientation, Boolean = false)
  class Scroll : InteractionType
    constructor(androidx.compose.foundation.gestures.ScrollableState, androidx.compose.foundation.gestures.Orientation, Boolean = false)
fun NavigationViewTrackingEffect(androidx.navigation.NavController, Boolean = true, com.datadog.android.rum.tracking.ComponentPredicate<androidx.navigation.NavDestination> = AcceptAllNavDestinations(), com.datadog.android.api.SdkCore = Datadog.getInstance())
fun <T> Navigation3TrackingEffect(List<T>, com.datadog.android.rum.tracking.ComponentPredicate<T> = AcceptAllNavKeyPredicate(), BackstackKeyResolver<T> = HashcodeBackstackKeyResolver(), AttributesResolver<T>? = null, com.datadog.android.api.SdkCore = Datadog.getInstance())
fun com.datadog.android.rum.RumConfiguration.Builder.enableComposeActionTracking(): com.datadog.android.rum.RumConfiguration.Builder
