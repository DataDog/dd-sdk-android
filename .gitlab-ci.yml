include:
  - 'https://gitlab-templates.ddbuild.io/slack-notifier/v1/template.yml'

variables:
  CURRENT_CI_IMAGE: "1"
  CI_IMAGE_DOCKER: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/dd-sdk-android:$CURRENT_CI_IMAGE

stages:
  - ci-image
  - analysis
  - test
  - publish
  - notify

ci-image:
  stage: ci-image
  when: manual
  except: [ tags, schedules ]
  tags: [ "runner:docker", "size:large" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:18.03.1
  script:
    - docker build --tag $CI_IMAGE_DOCKER -f Dockerfile.gitlab .
    - docker push $CI_IMAGE_DOCKER

analysis:ktlint:
  tags: [ "runner:docker", "size:large" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  script:
    - git fetch --depth=1 origin master
    - ./gradlew :ktlintCheckAll

analysis:android-lint:
  tags: [ "runner:docker", "size:large" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  script:
    - git fetch --depth=1 origin master
    - ./gradlew :lintCheckAll

analysis:detekt:
  tags: [ "runner:docker", "size:large" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  script:
    - git fetch --depth=1 origin master
    - ./gradlew :detektAll

analysis:licenses:
  tags: [ "runner:docker", "size:large" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  script:
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android:checkThirdPartyLicences :dd-sdk-android-timber:checkThirdPartyLicences

analysis:api-surface:
  tags: [ "runner:docker", "size:large" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  script:
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android:checkApiSurfaceChanges :dd-sdk-android-timber:checkApiSurfaceChanges

test:unit:
  tags: [ "runner:docker", "size:large" ]
  image: $CI_IMAGE_DOCKER
  stage: test
  script:
    - git fetch --depth=1 origin master
    - ./gradlew unitTestAll

publish:release:
  tags: [ "runner:docker", "size:large" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text > ./gradle.properties
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android:bintrayUpload

publish:release-timber:
  tags: [ "runner:docker", "size:large" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text > ./gradle.properties
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-timber:bintrayUpload

notify:release:
  extends: .slack-notifier-base
  stage: notify
  when: on_success
  only:
    - tags
  script:
    - BINTRAY_URL="https://bintray.com/datadog/datadog-maven/dd-sdk-android"
    - 'MESSAGE_TEXT=":package: `$CI_PROJECT_NAME` $CI_COMMIT_TAG published on :bintray: ($BINTRAY_URL)."'
    - postmessage "#mobile-rum" "$MESSAGE_TEXT"

notify:failure:
  extends: .slack-notifier-base
  stage: notify
  when: on_failure
  only:
    - tags
  script:
    - BUILD_URL="$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID"
    - 'MESSAGE_TEXT=":status_alert: `$CI_PROJECT_NAME` $CI_COMMIT_TAG publish pipeline <$BUILD_URL|$COMMIT_MESSAGE> failed."'
    - postmessage "#mobile-rum" "$MESSAGE_TEXT"