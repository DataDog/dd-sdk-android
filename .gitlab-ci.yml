include:
  - 'https://gitlab-templates.ddbuild.io/slack-notifier/v1/template.yml'

# SETUP

variables:
  CURRENT_CI_IMAGE: "1"
  CI_IMAGE_DOCKER: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/dd-sdk-android:$CURRENT_CI_IMAGE
  GIT_DEPTH: 5

  DD_AGENT_HOST: "$BUILDENV_HOST_IP"
  DD_SERVICE: "dd-sdk-android"
  DD_ENV_TESTS: "ci"
  DD_INTEGRATION_JUNIT_5_ENABLED: "true"

stages:
  - ci-image
  - security
  - analysis
  - test
  - publish
  - notify

# CI IMAGE

ci-image:
  stage: ci-image
  when: manual
  except: [ tags, schedules ]
  tags: [ "runner:docker" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:18.03.1
  script:
    - docker build --tag $CI_IMAGE_DOCKER -f Dockerfile.gitlab .
    - docker push $CI_IMAGE_DOCKER

# SECURITY

create_key:
  stage: security
  when: manual
  tags: [ "runner:docker" ]
  variables:
    PROJECT_NAME: "dd-sdk-android"
    EXPORT_TO_KEYSERVER: "true"
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/agent-key-management-tools/gpg:1
  script:
    - /create.sh
  artifacts:
    expire_in: 13 mos
    paths:
      - pubkeys


# STATIC ANALYSIS

analysis:ktlint:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  timeout: 30m
  script:
    - git fetch --depth=1 origin master
    - GRADLE_OPTS="-Xmx2560m" ./gradlew :ktlintCheckAll --stacktrace --no-daemon

analysis:android-lint:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  timeout: 30m
  script:
    - git fetch --depth=1 origin master
    - GRADLE_OPTS="-Xmx2560m" ./gradlew :lintCheckAll --stacktrace --no-daemon

analysis:detekt:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  timeout: 30m
  script:
    - git fetch --depth=1 origin master
    - GRADLE_OPTS="-Xmx2560m" ./gradlew :detektAll --stacktrace --no-daemon

analysis:licenses:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  timeout: 30m
  script:
    - git fetch --depth=1 origin master
    - GRADLE_OPTS="-Xmx2560m" ./gradlew checkThirdPartyLicensesAll --stacktrace --no-daemon

analysis:api-surface:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  timeout: 30m
  script:
    - git fetch --depth=1 origin master
    - GRADLE_OPTS="-Xmx2560m" ./gradlew checkApiSurfaceChangesAll --stacktrace --no-daemon

analysis:nightly-tests-coverage:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  timeout: 30m
  script:
    - git fetch --depth=1 origin master
    - GRADLE_OPTS="-Xmx2560m" ./gradlew checkNightlyTestsCoverage --stacktrace --no-daemon

analysis:woke:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: analysis
  timeout: 30m
  script:
    - git fetch --depth=1 origin master
    - /usr/bin/woke --exit-1-on-failure

# TESTS

test:debug:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: test
  timeout: 1h
  script:
    - git fetch --depth=1 origin master
    - rm -rf ~/.gradle/daemon/
    - GRADLE_OPTS="-Xmx2560m" ./gradlew :unitTestDebug --stacktrace --no-daemon

test:release:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: test
  timeout: 1h
  script:
    - git fetch --depth=1 origin master
    - rm -rf ~/.gradle/daemon/
    - GRADLE_OPTS="-Xmx2560m" ./gradlew :unitTestRelease --stacktrace --no-daemon

test:tools:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: test
  timeout: 1h
  script:
    - git fetch --depth=1 origin master
    - rm -rf ~/.gradle/daemon/
    - GRADLE_OPTS="-Xmx2560m" ./gradlew :unitTestTools --stacktrace --no-daemon

test:kover:
  tags: [ "runner:main" ]
  image: $CI_IMAGE_DOCKER
  stage: test
  timeout: 1h
  script:
    - pip3 install datadog
    - git fetch --depth=1 origin master
    - rm -rf ~/.gradle/daemon/
    - export DD_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.api_key --with-decryption --query "Parameter.Value" --out text)
    - export DD_APP_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.app_key --with-decryption --query "Parameter.Value" --out text)
    - CODECOV_TOKEN=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.codecov-token  --with-decryption --query "Parameter.Value" --out text)
    - GRADLE_OPTS="-Xmx2560m" ./gradlew :koverReportAll --stacktrace --no-daemon
    - python3 ddcoverage.py --prefix dd-sdk-android
    - bash <(cat ./codecov.sh) -t $CODECOV_TOKEN

# PUBLISH ARTIFACTS ON MAVEN

publish:release:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android:publishToSonatype --stacktrace --no-daemon

publish:release-coil:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-coil:publishToSonatype --stacktrace --no-daemon

publish:release-fresco:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-fresco:publishToSonatype --stacktrace --no-daemon

publish:release-glide:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-glide:publishToSonatype --stacktrace --no-daemon

publish:release-ktx:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-ktx:publishToSonatype --stacktrace --no-daemon

publish:release-ndk:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-ndk:publishToSonatype --stacktrace --no-daemon

publish:release-rx:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-rx:publishToSonatype --stacktrace --no-daemon

publish:release-sqldelight:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-sqldelight:publishToSonatype --stacktrace --no-daemon

publish:release-timber:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: publish
  timeout: 30m
  script:
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gradle-properties --with-decryption --query "Parameter.Value" --out text >> ./gradle.properties
    - export GPG_PRIVATE_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_USERNAME=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_username --with-decryption --query "Parameter.Value" --out text)
    - export OSSRH_PASSWORD=$(aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.signing.ossrh_password --with-decryption --query "Parameter.Value" --out text)
    - git fetch --depth=1 origin master
    - ./gradlew :dd-sdk-android-timber:publishToSonatype --stacktrace --no-daemon

# SLACK NOTIFICATIONS

notify:release:
  extends: .slack-notifier-base
  stage: notify
  when: on_success
  only:
    - tags
  script:
    - MAVEN_URL="https://search.maven.org/artifact/com.datadoghq/dd-sdk-android/$CI_COMMIT_TAG/aar"
    - 'MESSAGE_TEXT=":package: $CI_PROJECT_NAME $CI_COMMIT_TAG published on :maven: $MAVEN_URL"'
    - postmessage "#mobile-rum" "$MESSAGE_TEXT"

notify:failure:
  extends: .slack-notifier-base
  stage: notify
  when: on_failure
  only:
    - tags
  script:
    - BUILD_URL="$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID"
    - 'MESSAGE_TEXT=":status_alert: $CI_PROJECT_NAME $CI_COMMIT_TAG publish pipeline <$BUILD_URL|$COMMIT_MESSAGE> failed."'
    - postmessage "#mobile-rum" "$MESSAGE_TEXT"

notify:dogfood-app:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: notify
  when: on_success
  script:
  - pip3 install GitPython requests
  - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gh_token --with-decryption --query "Parameter.Value" --out text >> ./gh_token
  - python3 dogfood.py -v $CI_COMMIT_TAG -t app

notify:dogfood-demo:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: notify
  when: on_success
  script:
    - pip3 install GitPython requests
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gh_token --with-decryption --query "Parameter.Value" --out text >> ./gh_token
    - python3 dogfood.py -v $CI_COMMIT_TAG -t demo

notify:dogfood-bridge:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: notify
  when: on_success
  script:
    - pip3 install GitPython requests
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gh_token --with-decryption --query "Parameter.Value" --out text >> ./gh_token
    - python3 dogfood.py -v $CI_COMMIT_TAG -t bridge

notify:dogfood-gradle-plugin:
  tags: [ "runner:main" ]
  only:
    - tags
  image: $CI_IMAGE_DOCKER
  stage: notify
  when: on_success
  script:
    - pip3 install GitPython requests
    - aws ssm get-parameter --region us-east-1 --name ci.dd-sdk-android.gh_token --with-decryption --query "Parameter.Value" --out text >> ./gh_token
    - python3 dogfood.py -v $CI_COMMIT_TAG -t gradle-plugin
